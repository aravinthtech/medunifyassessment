// <auto-generated />
using System;
using ManagePatientServices.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagePatientServices.Migrations
{
    [DbContext(typeof(PatientContext))]
    [Migration("20230628091210_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("ManagePatientServices.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("ManagePatientServices.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("PatientId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("ManagePatientServices.Models.PatientProgressNotes", b =>
                {
                    b.Property<int>("PatientProgressNotesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PatientVisitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PatientProgressNotesId");

                    b.HasIndex("PatientVisitId");

                    b.ToTable("PatientProgressNotes");
                });

            modelBuilder.Entity("ManagePatientServices.Models.PatientVisit", b =>
                {
                    b.Property<int>("PatientVisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("TEXT");

                    b.HasKey("PatientVisitId");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientVisits");
                });

            modelBuilder.Entity("ManagePatientServices.Models.Patient", b =>
                {
                    b.HasOne("ManagePatientServices.Models.Organization", "Organization")
                        .WithMany("Patients")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ManagePatientServices.Models.PatientProgressNotes", b =>
                {
                    b.HasOne("ManagePatientServices.Models.PatientVisit", null)
                        .WithMany("ProgressNotes")
                        .HasForeignKey("PatientVisitId");
                });

            modelBuilder.Entity("ManagePatientServices.Models.PatientVisit", b =>
                {
                    b.HasOne("ManagePatientServices.Models.Patient", "Patient")
                        .WithMany("PatientVisits")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ManagePatientServices.Models.Organization", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("ManagePatientServices.Models.Patient", b =>
                {
                    b.Navigation("PatientVisits");
                });

            modelBuilder.Entity("ManagePatientServices.Models.PatientVisit", b =>
                {
                    b.Navigation("ProgressNotes");
                });
#pragma warning restore 612, 618
        }
    }
}
